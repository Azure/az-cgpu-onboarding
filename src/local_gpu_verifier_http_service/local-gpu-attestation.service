[Unit]
Description=Local GPU Attestation Service on HTTP and Socket
After=network.target
Wants=network-online.target

[Service]
Type=simple

# Ensure the log directory exists before starting the service
ExecStartPre=/bin/mkdir -p /var/log/local_gpu_verifier
ExecStartPre=/bin/chmod 755 /var/log/local_gpu_verifier

# Ensure the socket directory exists
ExecStartPre=/bin/mkdir -p /var/run/gpu-attestation
ExecStartPre=/bin/chmod 755 /var/run/gpu-attestation

# Ensure the binary exists before starting
ExecStartPre=/bin/bash -c 'if [ ! -x /usr/local/bin/local_gpu_verifier_http_service/local-gpu-attestation-http-service ]; then echo "Binary missing: /usr/local/bin/local_gpu_verifier_http_service/local-gpu-attestation-http-service" >&2; exit 1; fi'

# Execute GPU Attestation Service binary
ExecStart=/usr/local/bin/local_gpu_verifier_http_service/local-gpu-attestation-http-service \
  -verifierroot /usr/local/lib/local_gpu_verifier \
  -logpath /var/log/local_gpu_verifier/local-gpu-attestation-http-service.log \
  -port 8123 \
  -socket /var/run/gpu-attestation/gpu-attestation.sock \
  -successstr "GPU Attestation is Successful"

# Set file descriptor limits
LimitNOFILE=65536

# Use journald for stdout/err
StandardOutput=journal
StandardError=journal

# Restart on failures
Restart=on-failure
RestartSec=5s

[Install]
WantedBy=multi-user.target